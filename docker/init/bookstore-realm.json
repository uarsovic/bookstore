  {
    "id": "d9a3a0e2-2a9c-440b-8c4c-bd4f500c639a",
    "realm": "bookstore",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "29052386-8945-47e7-91e7-da3fd3c82a35",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "d9a3a0e2-2a9c-440b-8c4c-bd4f500c639a",
          "attributes": {}
        },
        {
          "id": "5f115609-6075-4304-94bb-7d19c8507b33",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "d9a3a0e2-2a9c-440b-8c4c-bd4f500c639a",
          "attributes": {}
        },
        {
          "id": "e450d8ad-02e7-4129-9168-a292effc95d0",
          "name": "default-roles-bookstore",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          "clientRole": false,
          "containerId": "d9a3a0e2-2a9c-440b-8c4c-bd4f500c639a",
          "attributes": {}
        }
      ],
      "client": {
        "bookstore-client-id": [
          {
            "id": "44f1477c-59c3-4302-9663-4b6ca5eafc25",
            "name": "ADMIN",
            "description": "",
            "composite": false,
            "clientRole": true,
            "containerId": "f5762df6-094d-4883-9f0e-a0b460e588cb",
            "attributes": {}
          },
          {
            "id": "8b8e51c9-229c-4510-86a9-6fab57057c4e",
            "name": "USER",
            "description": "",
            "composite": false,
            "clientRole": true,
            "containerId": "f5762df6-094d-4883-9f0e-a0b460e588cb",
            "attributes": {}
          }
        ],
        "realm-management": [
          {
            "id": "17206d92-2afb-492d-8cc7-e639f9a7288c",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "9c871c83-b23e-4ae4-9345-d8009d3d0342",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "c40540c8-9242-47dc-a627-de525471e487",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "ce83159f-1a8e-43a6-b919-3eacc6bbafb8",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "3d441490-f283-444d-8c86-604fdd428c77",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "1234e74a-12e4-4777-b9b2-266db1867c38",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "manage-authorization",
                  "view-identity-providers",
                  "query-clients",
                  "query-groups",
                  "manage-events",
                  "manage-realm",
                  "query-users",
                  "view-realm",
                  "view-users",
                  "query-realms",
                  "manage-users",
                  "impersonation",
                  "manage-identity-providers",
                  "manage-clients",
                  "view-authorization",
                  "view-events",
                  "create-client",
                  "view-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "b1865ebe-6ea8-44ed-a1af-7befb35c0b34",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "7baec307-b18c-4afc-b912-73be12e58781",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "d98a986e-faaa-4f92-bbee-eee603bc8087",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "51e5d156-5023-4ab0-a8b9-684c3dd48f78",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "240c9ef7-96fd-4499-9f33-841c3252f725",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "c2b33a55-ba9d-4fa3-bed0-46f8a46f4051",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "4c5d73df-8e0f-48b1-81fe-4e395785303b",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "b5867a0f-12de-4f8c-965a-02aaf8756f4e",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "43e99abe-ca2f-4b64-895e-939e4fb6d64f",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "456e1d1c-deab-4811-a90a-9aa811f00292",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "6b2fadfc-8c3a-4a61-ab3a-9ae696680d77",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "b85b70d7-3345-4cc8-965d-e58c338db376",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          },
          {
            "id": "3c8124c1-ca36-4163-abe6-b3d74190ae67",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "7232ab0d-d217-4807-8ca2-fc6a72818112",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ab922ed-9398-457c-9e62-80adb5583bc3",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "dd326975-e61a-45f1-9c70-50000404f3e7",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
            "attributes": {}
          },
          {
            "id": "7e351050-0e01-4234-8b6c-95c83d0c0af8",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
            "attributes": {}
          },
          {
            "id": "2de04b39-6e46-4b43-bf42-0ae02e173903",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
            "attributes": {}
          },
          {
            "id": "ad790664-5526-482e-b6b5-afee68513743",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
            "attributes": {}
          },
          {
            "id": "4bcd54a8-c0ae-4a03-b50f-13bc200d18ad",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
            "attributes": {}
          },
          {
            "id": "a5912fe4-5bea-4e0f-ab9d-572992a91eb0",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
            "attributes": {}
          },
          {
            "id": "76a1a421-0af6-47b6-9e22-3f44208665db",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
            "attributes": {}
          },
          {
            "id": "13a200a1-5d25-4960-8068-dbc7f5dffbb3",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "e450d8ad-02e7-4129-9168-a292effc95d0",
      "name": "default-roles-bookstore",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "d9a3a0e2-2a9c-440b-8c4c-bd4f500c639a"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "Yes",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "required",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "id": "d2eb080f-9b0b-40bb-ae76-cd82b11d4956",
        "username": "bookstoreadmin",
        "firstName": "Admin",
        "lastName": "User",
        "email": "admin@bookstore.rs",
        "emailVerified": true,
        "enabled": true,
        "createdTimestamp": 1759428753190,
        "totp": false,
        "credentials": [
          {
            "id": "b10a52e4-b753-45ae-8ff4-891d8d51fc47",
            "type": "password",
            "userLabel": "My password",
            "createdDate": 1759428765788,
            "secretData": "{\"value\":\"Bv+a1Me2PK0r1nkc0qVSn4g+uJAn45fYjgWOR1NB3mU=\",\"salt\":\"Y3g0pvO64izg4Uv8k+KjvQ==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-bookstore"
        ],
        "clientRoles": {
          "bookstore-client-id": [
            "ADMIN"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "7acc7375-f3aa-41da-92be-368928d92cfb",
        "username": "bookstoreuser",
        "firstName": "User",
        "lastName": "User",
        "email": "user@bookstore.rs",
        "emailVerified": true,
        "enabled": true,
        "createdTimestamp": 1759428785706,
        "totp": false,
        "credentials": [
          {
            "id": "fe01098b-ddbc-46a7-ab2f-97158265e257",
            "type": "password",
            "userLabel": "My password",
            "createdDate": 1759428798281,
            "secretData": "{\"value\":\"B0zupASjDOEDKPNGoFbBCQhyF5AdrmiUBSPhMFNI9Ws=\",\"salt\":\"5BKhXbJeZEaAwYSv+pSuVw==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-bookstore"
        ],
        "clientRoles": {
          "bookstore-client-id": [
            "USER"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "84a18ecb-0c04-4a12-ab56-e925715b0d55",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/bookstore/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/bookstore/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "b2c3c1bd-83ed-449f-81ad-90fde1b0c6b3",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/bookstore/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/bookstore/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "de155917-1280-4dbf-8aa0-079acb91d616",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "64bd3055-b2d1-459d-ab8c-a8ff9091add9",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f5762df6-094d-4883-9f0e-a0b460e588cb",
        "clientId": "bookstore-client-id",
        "name": "bookstore-client",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/*"
        ],
        "webOrigins": [
          "/*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "standard.token.exchange.enabled": "false",
          "frontchannel.logout.session.required": "true",
          "display.on.consent.screen": "false",
          "oauth2.device.authorization.grant.enabled": "true",
          "backchannel.logout.revoke.offline.tokens": "false",
          "dpop.bound.access.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "6ab922ed-9398-457c-9e62-80adb5583bc3",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "9cb3e267-839c-45d4-8840-a281b9f9ee3f",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "391687e5-11f3-42d9-a4c2-2f7f65f84972",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/bookstore/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/bookstore/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "5c38d35c-fcc2-4d4f-8116-796da5a79de7",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "7b5ef189-9c79-412d-97e7-955427b8ba9a",
        "name": "service_account",
        "description": "Specific scope for a client enabled for service accounts",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "1fb8ada6-3204-43fa-84db-ce6a7ad240b8",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e3f9ea57-f010-4e1f-a4ab-13814316d6f8",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1a5fb040-a1ac-4dea-8cbc-93eee6f8311d",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "69acb9c7-b05a-4f5d-a52e-5dfd7d04739d",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "c3f7c100-cb51-4a18-996b-753ddcdd6825",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "483b14f3-e460-444f-8eba-26e2ff504593",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          }
        ]
      },
      {
        "id": "012972f5-e813-451e-a96d-675bd020ba8d",
        "name": "saml_organization",
        "description": "Organization Membership",
        "protocol": "saml",
        "attributes": {
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "09b6eaee-200c-4320-ba01-73558a26e3f1",
            "name": "organization",
            "protocol": "saml",
            "protocolMapper": "saml-organization-membership-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "e7d50af7-140b-4061-a34d-422aaabed1bc",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "40627a3a-ac3d-4553-8f76-0c9eca16132f",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "262117ea-1ce4-4e5b-b44e-4f68ca05a18b",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "c8eba9be-e8ef-4eea-989f-80b19cbe5d94",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "4d4400f3-0fac-4b88-b41e-c15df10f0680",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "6dcac904-d1a2-4c1a-aae1-f772f92cc8c7",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "5d0013f3-9aab-47f0-bc2c-0a919b4a5096",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "a509d948-496e-49ad-891e-4aadbb744829",
        "name": "organization",
        "description": "Additional claims about the organization a subject belongs to",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${organizationScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "f0f0f2c0-9b87-4589-9a90-f766d2c0709c",
            "name": "organization",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-organization-membership-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "organization",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "d3f82459-8005-4d99-a85d-ba51ad956b43",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "f1e3a8dc-ad68-4695-b73f-a39813c4183d",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9358aab9-3ba2-403d-a67c-9cb1d3c91b7c",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c4ce43be-41c4-482f-ba54-d94c3009206e",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "97d44855-f295-4856-9ada-0498b908c6eb",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7e1e30ff-984b-4bea-b4e4-78da0a48e1b8",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b54d36cc-ddef-4c42-93d9-63726bbed1c6",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6ab12156-7fdf-46fa-9906-d84689f2b005",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d6215daa-9907-431e-bffa-82ecce45d321",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "8c90dbf6-f9bf-4668-8a51-a3548a598dd6",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "05206ed0-ba99-4b29-a5ff-12756a8df085",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a981212b-2bcf-4999-9432-f073d147ede3",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "63a23abb-a486-4d50-a89d-c3c328a69326",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "6942f030-691e-41c9-82d4-88463d4d39b4",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "832838c6-0455-4d8b-b572-c381c804e636",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "a40ce85b-81d9-4a7c-a28c-8580fca93d71",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "ab3f39fc-095c-478f-8182-26ce075cfca1",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "65c92879-6c6e-46ed-989a-c3337bdb2e64",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "a50765c2-fa96-4817-8a14-c2d6afe39910",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "fd043959-4648-4106-8179-ecd00c295229",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "7432fb5c-d70c-41f5-9368-6439f64a9769",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "804fe03f-eb81-4b57-915f-db3e2f80a44e",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "c090001b-213b-43db-b5ff-6fe6ef34c397",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "f4c0d3a7-37a1-43ce-aca5-ee9c4e0cbb97",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "99d4d4b0-3d9b-4db4-b8f5-68da7dfcaac7",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "df49fc91-242e-4e5a-abd5-053926b7747c",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "b6e129ad-4a69-412d-9cbe-a9aac8c12bfe",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "44a67a1d-b88d-4f00-817e-7d3c7723e3eb",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "c40ee739-dfad-45c0-b6f8-4a95c6bb01b7",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "3c55d2ae-1acf-4bea-90f9-6254d548ee73",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "saml_organization",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt",
      "organization"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "3dceb467-169c-40e6-86fa-c4fbacaf1abf",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "ebbd73fe-9c80-4e4d-b8bb-69e7e475d79b",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-full-name-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "534362a7-c2a0-4663-8916-9df7562b7df8",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "736cc923-732d-49ef-852f-51221fe91953",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-attribute-mapper",
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-usermodel-property-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "49ab522d-d87d-4822-9216-deaa426782df",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "66b20404-4e80-43cb-a3eb-aa7b4ca60bb5",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "13e95cff-ca6b-450f-8fe0-e1141b35698f",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "b7a50708-67ec-4608-85f8-41aad525c6b3",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "b3ad3ea2-938b-4f20-9b9e-db704e6683f4",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "3ff50806-e244-4091-ba2e-bbf4307e8993"
            ],
            "secret": [
              "wU7dhDpndynmmrGxNQVK9w"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "3bfcf034-98a7-471d-b1c0-c7eaeefd0224",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "541d5863-45cb-44a8-88ca-33875c369c3a"
            ],
            "secret": [
              "mqrPZLThU8Du2TYrpIr732oNO0U1keoyEoyBpg9FwzKH7WgVSejVRoxr_aVVuPqDXU_4ObW_EpRxCdZSjO64OPzUBfKaTOGlcBfXCvbYkK7uolLVKTc9gpv32329UgHBC1kZJYvBtYU9Tzg9xYKR83RlYBldviuSQKEGyKEXs6o"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "13828324-d063-4eac-902d-41b24212261a",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAqqjv2lc4+KGnnXxxCzgz8J14x6XzHWpB6VBuo7sdA84GAkXE2gM4E+f9SsP0CU/y3XtnjHhFuXtu4NGDbAgLkSIaaLmu+S69QyPhgrv4UJRNniuDS1oIOCEnO2AXCdniYErye+3JEt36FjXZk6ub4KMYTgo8fqPfhhqdwtSlSksru4FPwmV4mDQIjqowa3CteEOHD1HBaPO8Af7VMIBu7CtaqcqW0Y/diRQShMXrOGkEbgvnBRnsZxGRtnQOYSCi1VOpKbL+SpXPJZMshPgvJhil/swbklsH/4R6MPleH4gBy28Y/oB5eweV0qXojYe9z9uxGKiEsKFWq6pS/HibfQIDAQABAoIBADZDPPBpp1222LrEZJUyq6EoEM06QNDrhkWPI36/8fvRuCtkz7CaMWxy6SCqqZ+EYi52HHiXjWPqkVi+hVEGRddBxq/hynbEm70LXZrZ9Zx5ayyNnVOKLu7Z68V/ShQByW7gpbUt6C8tkWUafjHr8MY+VW4K5y1FIb9cGyllv6CdPGdS/0nx+TTgELkIB1jlD98tJp7Z2LAi91r7SiJOiBYVD+4nLw/XdGgalw3ifnesCw24nKxkJFHuiAL9nv+cHsuSt7MUwAtoVAqaUH/cDVspf0yMyHyFVDhC/5yn3Ju8wDxDofoBP0PF03on/p9fda34bp+Ue9SwZnB1ruCh2+kCgYEA6gdfyuBuYYBgieCIQKe8pHbsy9Zh8EPtfRUlTywEHEzr5lryMHiX+CLHjrdt9xrJkVo+lSC7lBYEsK7yfAJW4orbZm2ajrmoXFfFeDBAde5teqFJoUCqgIHiCqV83VFvkzqOm+u/OjKMyE2UU5ye9eEuOm0OyAAeyAFRIb1O51MCgYEAuq6PkBNDPp3Xs4rdWw1vLeHzIAK0NvC+HPHg9GSleTb7LDpQtOMGC6+UlyhoSeOnn2F/gBKAfT7CaBMboP/I6SfIPyAXg0tW3Na33012bL05LmMJet5CeAp7caM6WAXg2pC7KbwOHNjqjwM+onAiYshYo496cQXES0hVz04LJ+8CgYEAqKFtper3vmvZpB/VLflvlXZYBDzSz2Sy4Jl3C8hkodvPc2n+72xF3Ld64dxMcWys536Gb8BpSThgYst80FyDLLPviavaXZNrvDZGhOcH27JU0rMbMgU9lmGAdjlucq72Xbko/zLs1MuN49r60RCe/f8m51Sj/PsRMv637j7Rdx8CgYB0C3z8n6zGaNIkLqdJKYG6MOG0PVoPaPmU/prK8SGXxyC9roZq21DvxLaGfDzP6a9SOQZL87Rhprisf2xGWZpnrS4iZ22WVSfq4aKtMfbyw3GfLzs+YJlLC6EO09u5yfWriBqAaAER15l/SxINYc1OQKIxEkiXp3ENJysIUchHiwKBgC/24KnYqAG5DiFgjLjR2TG3BNFBNkk3tOc3rD3Plmt9uDe1B569A3BJZ3T4QX+TBQNIXTsaHU+qTtatGPSKlAfXG9riaHX7Ra9QGebX2P+CHBJ80rEdWQa2j80/lbsRwvQf8M3s55rOxTWY1dsDp5yXyRubJ4YN5yqX5gogs2rn"
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICoTCCAYkCBgGZph/EWzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlib29rc3RvcmUwHhcNMjUxMDAyMTgxMDIzWhcNMzUxMDAyMTgxMjAzWjAUMRIwEAYDVQQDDAlib29rc3RvcmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqqO/aVzj4oaedfHELODPwnXjHpfMdakHpUG6jux0DzgYCRcTaAzgT5/1Kw/QJT/Lde2eMeEW5e27g0YNsCAuRIhpoua75Lr1DI+GCu/hQlE2eK4NLWgg4ISc7YBcJ2eJgSvJ77ckS3foWNdmTq5vgoxhOCjx+o9+GGp3C1KVKSyu7gU/CZXiYNAiOqjBrcK14Q4cPUcFo87wB/tUwgG7sK1qpypbRj92JFBKExes4aQRuC+cFGexnEZG2dA5hIKLVU6kpsv5Klc8lkyyE+C8mGKX+zBuSWwf/hHow+V4fiAHLbxj+gHl7B5XSpeiNh73P27EYqISwoVarqlL8eJt9AgMBAAEwDQYJKoZIhvcNAQELBQADggEBADMf4zKWwLPvjIQkbyEE+m+pUMn9GWL/+HTxLFZaneJHIoY2tXBUTW4ufD8+XSMPq8vzLGJZNSF6508rOKxZaNe/r+T+aHkCD3P9qEZiIYuAcs5F1B8x4PXiJjYOrg7hw33OF8a1hwNNpztoYRXkxkHx9APZjwx1yJg2xRavWuhpuaYQEbAgZh8DH7AdF6/UH5dZudBfMmGxrHaWsE86i2/5q+ZkQ4u2opWhi6Lwbkss1mEq/HW0r5t8Ette1yVR28NV+gWqmZVs+gLWExJVtId5RvidXbQ/k5+kc8OiE9mttJhL4UcGS/3bA14+Awptyx8gPgPY5wQl83P/68Y6PoE="
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "f01d0316-1cfa-4b04-9faa-9c7098822e12",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAkzFf76DyTdnjrhZX5BLkBkKUCsnvY6flLE50WmDQ1MpbdioiRqQ+fRwOAulcKdvh8EU9qnMj1L5Bz7LXnICz1jOdBT7y52502CeKAOv4kwwyAMg7TGCMCwaXkhkzsxQUZwuusmJXm17bkC0gxFE//vYvlpV73/JbbKlczUuiAOIx8PHQJj7Sxz/qqZLq5mtuqNPR2SOPvTcZdR4nLAB7d0xOYKlFBarBKqabZPV4ECvouXAPNvkcCAnR0znosWtNiMJoFhXPIz9AWCkuMz21kMoZPuypy+adM2dyBOQc90OoqSzrCoTI3SXeiFtJ6OVRwkALOiEF4l0C8Tq3RE3coQIDAQABAoIBAB+CvHUCUZ0U/kbwhZRP7vzgF+1PWa5N7SPVD9ehTlOfloDveDMDSlViQiWha5eSeQYE7LSmvY73xAMA2GOqsdUza3QKC9o7rUvw+vxDiA2C2NmOBBPPv2tE2AHw3z6BF/UPbTDHGNYsMnjlEFS2yCp+7aUhD0ncCnJyt2lDvcTOVJokY4s5Uu0kqebewUa8Fu3sHYRZVlU0iNVk3cWHdK8PCeB6s2DsjzJ/BKR+p38q+pAuXhThPczELdBTHEKdZvJx3g5rz5BY7uw9JQ+r+1lGJn//4lFK/Iiiv9HuJ4Qam8nKrsHQi9iLMziUVxfT0uD4KvWptVZk72AUd/B5rxkCgYEAx1eCflb8IAoQAHCs+1y8WU5tMXvCIYgRQG0kzZZDcMBH+heNtNQjopbWjILIiS4mcxCKJ59b0fsMn8pXqe803Z8qKwYSEAjbcaBrcGaNSJMuNkiYqWfUy5aBhYgdwabEhDItxUluICFCzRaR1yESU5U4PVXgXZdIq6iVzcDOEdsCgYEAvQdoSDgNomGrbOm7fcw4/1j1Ze4+PRPsVXAYPQo9KmsLBuRpjUfmN/UZiOOl6IlMMDp9M2cEjX12KPBOlTdTWQi1YzFV20Xhd4zu8nHD962yqZeVrv1RP0gsh6Tq+DGxsAH0TImYU2STew9WEBA1xGSEgL993/GOfO0fPLN1SjMCgYAQaCFzaJFjybA7eQqjvaQ67XuLQRZfUCWrWdBXo3B1jT3fVaTyJyuvrB6IfhMnR0ce3VOhozoZdEI7vJmugOOnAfykgeFmtHPrTDrLi4VBXevFx//YoZUgFIkghm18jM9L2h1uSXbo6hPncV4biLtLadKxKapHybXPexapUp8jVQKBgQC7Dxd9UCr95BVWJD6sEGrfFdNSWV8x5gNb0R/LV9SLo344BdUGQH5sJZptQoouAaBpoZfARFPXCK7jeFrrguJyGxIU5P+HjDHAsrDLLxW0hilldmJj1r6OFwgp+2Oi1Np3yJdPHmKlM8RWZSjPoJr0jFwrZFRWRp6wtZ7R3O1WzQKBgEfzD38lFkBKi+HLPV6WfWsrOpLYQkCRT/uVBHyJZZbI0Iy5Z5i5KvG7gmQLVOkYCEb6tEF1UDQFTKvqYB8ktCgoXUti1ZaAqlDpm3RF5860SUnZQUPeeA3cZURRTZFBn1H6M5wPv48m1izFRwHBAkdemTgxFLwwQMCKwlq5Aby6"
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICoTCCAYkCBgGZph/EpTANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlib29rc3RvcmUwHhcNMjUxMDAyMTgxMDIzWhcNMzUxMDAyMTgxMjAzWjAUMRIwEAYDVQQDDAlib29rc3RvcmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCTMV/voPJN2eOuFlfkEuQGQpQKye9jp+UsTnRaYNDUylt2KiJGpD59HA4C6Vwp2+HwRT2qcyPUvkHPstecgLPWM50FPvLnbnTYJ4oA6/iTDDIAyDtMYIwLBpeSGTOzFBRnC66yYlebXtuQLSDEUT/+9i+WlXvf8ltsqVzNS6IA4jHw8dAmPtLHP+qpkurma26o09HZI4+9Nxl1HicsAHt3TE5gqUUFqsEqpptk9XgQK+i5cA82+RwICdHTOeixa02IwmgWFc8jP0BYKS4zPbWQyhk+7KnL5p0zZ3IE5Bz3Q6ipLOsKhMjdJd6IW0no5VHCQAs6IQXiXQLxOrdETdyhAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFM85l7tR+KsvArzoeRw8rthRefG4mopiZyzbsH5woSQ+XpNNG1uhrmpTPA4uUVVB6KTO/48jR7YmI66PpPZZx7GpTgyqrYsOVEnzgf/ZwBNeSh0ycVMIWZ8gY8tMVg9xYVIx0ob9HFEoCgLLLpmYz+qU8xj8SeQR7xj+99HpXr4UeBRWavzfyY24JBLuYJacNDpJzB00m23NUxWcWxIYFPdY4vlFSHdDBx1gtwNUpZuSaeV5SV6iknEAK05pi74ovp86jZ68++dr2HSc4SzfPa+mWbE1yAfc6/CC6BWCSBWAKUlWJXqnVKtzEOl0H/J2InGeYk0kHHB5hMwPQLlaNE="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "authenticationFlows": [
      {
        "id": "d5fd121f-ca1e-400d-8e2e-c22bb1eaf0b0",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "49bcd6e1-6f2e-4df6-8252-cfbf289397e5",
        "alias": "Browser - Conditional 2FA",
        "description": "Flow to determine if any 2FA is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorConfig": "browser-conditional-credential",
            "authenticator": "conditional-credential",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "webauthn-authenticator",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-recovery-authn-code-form",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "a531ff6a-5a03-435a-ba4c-b42a4af6cc3a",
        "alias": "Browser - Conditional Organization",
        "description": "Flow to determine if the organization identity-first login is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "organization",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "42b4ad8d-3c92-432a-8cc8-a3b091e5d8d4",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ed3a8c75-d590-46a2-9225-6cafeba2a24b",
        "alias": "First Broker Login - Conditional Organization",
        "description": "Flow to determine if the authenticator that adds organization members is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "idp-add-organization-member",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "a18471d3-fe89-4024-8409-35dea1c6e5b6",
        "alias": "First broker login - Conditional 2FA",
        "description": "Flow to determine if any 2FA is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorConfig": "first-broker-login-conditional-credential",
            "authenticator": "conditional-credential",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "webauthn-authenticator",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-recovery-authn-code-form",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "fd2a2eba-d9ca-49ac-aff8-5b7c996053bd",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f58a9f97-30b1-473a-a940-4d32b4469036",
        "alias": "Organization",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "223b094c-d33f-4b31-aed6-296c050fe4af",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b2eeddc7-ecac-4595-b5db-29ea0cb93642",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "535bd179-09a7-4000-9c6e-c1815f311d06",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional 2FA",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9388c402-eaee-4e3b-985d-39c697f3f1a9",
        "alias": "browser",
        "description": "Browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 26,
            "autheticatorFlow": true,
            "flowAlias": "Organization",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ecd70c78-a810-4374-b90f-f474fc81126a",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "3e84b4c4-b729-4788-bbc0-884ae07c80b3",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "a335ea41-0eb0-4f85-af85-13ff16b9c7cb",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ca3c75a3-2f3e-4942-b2da-32d4a6b1fcc7",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 60,
            "autheticatorFlow": true,
            "flowAlias": "First Broker Login - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f41683bb-83f1-4b67-9383-bd10852a6f51",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional 2FA",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2658640b-005f-4f90-bce6-43782d94cb17",
        "alias": "registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9949cc40-c31d-410f-ad66-6bf52d48f686",
        "alias": "registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f9e65cf1-41b0-4a0d-bf31-e3f7805f24f6",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "60c69786-943e-466b-9844-ddf77c75819b",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "322c2142-8333-432c-95b3-f4f05ea78a47",
        "alias": "browser-conditional-credential",
        "config": {
          "credentials": "webauthn-passwordless"
        }
      },
      {
        "id": "e844b8c3-bbd9-4d61-b225-dd30db3466ed",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "97c0c35d-dccd-465b-ba39-84694946b7ba",
        "alias": "first-broker-login-conditional-credential",
        "config": {
          "credentials": "webauthn-passwordless"
        }
      },
      {
        "id": "3c884246-b513-4f0a-88ea-17f39cf914b8",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "UPDATE_EMAIL",
        "name": "Update Email",
        "providerId": "UPDATE_EMAIL",
        "enabled": false,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 110,
        "config": {}
      },
      {
        "alias": "idp_link",
        "name": "Linking Identity Provider",
        "providerId": "idp_link",
        "enabled": true,
        "defaultAction": false,
        "priority": 120,
        "config": {}
      },
      {
        "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
        "name": "Recovery Authentication Codes",
        "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES",
        "enabled": true,
        "defaultAction": false,
        "priority": 130,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "5",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "26.4.0",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  },
  {
    "id": "368b29a8-75ea-4729-9579-1a39144e3d6d",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "1f1b41c5-7aed-4e75-90d5-465c3be70c05",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": [
              "create-realm"
            ],
            "client": {
              "master-realm": [
                "query-users",
                "manage-authorization",
                "view-authorization",
                "view-users",
                "view-clients",
                "view-identity-providers",
                "manage-users",
                "query-clients",
                "view-events",
                "manage-clients",
                "manage-identity-providers",
                "manage-events",
                "manage-realm",
                "query-realms",
                "view-realm",
                "query-groups",
                "impersonation",
                "create-client"
              ],
              "bookstore-realm": [
                "view-identity-providers",
                "view-clients",
                "impersonation",
                "manage-clients",
                "view-realm",
                "view-users",
                "query-groups",
                "manage-realm",
                "query-realms",
                "query-users",
                "manage-users",
                "create-client",
                "manage-events",
                "view-events",
                "manage-identity-providers",
                "view-authorization",
                "manage-authorization",
                "query-clients"
              ]
            }
          },
          "clientRole": false,
          "containerId": "368b29a8-75ea-4729-9579-1a39144e3d6d",
          "attributes": {}
        },
        {
          "id": "1001708e-9627-4895-9218-50c861901c61",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          "clientRole": false,
          "containerId": "368b29a8-75ea-4729-9579-1a39144e3d6d",
          "attributes": {}
        },
        {
          "id": "f42b9bc7-112d-48ef-8eed-2803555cdfcf",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "368b29a8-75ea-4729-9579-1a39144e3d6d",
          "attributes": {}
        },
        {
          "id": "f06da9d8-6880-4ff3-b15d-1eda779f3d20",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "368b29a8-75ea-4729-9579-1a39144e3d6d",
          "attributes": {}
        },
        {
          "id": "ca0f0280-5326-46ce-8652-c95596f6808b",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "368b29a8-75ea-4729-9579-1a39144e3d6d",
          "attributes": {}
        }
      ],
      "client": {
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "a5850a51-a4be-470f-a94a-d06149ab5417",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "fe2cd49a-5295-46ad-8df1-40b72ce8f981",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "029ea19f-4499-4bb9-91f8-811b5f269f1d",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "2303df19-2b22-45e3-b992-b3babc3ba9f9",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "5020e103-90d6-435e-8daf-abade96dbb98",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "aad173a4-0643-4ce6-bf4d-bfbd9ee34223",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "4acaff24-d5a4-489c-a697-18ce197c4c44",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "d281f185-8367-4360-be53-ea24dc6b85c0",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "b08b8407-2718-45dc-904e-1c929488aa7d",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "505ce13b-b1de-4312-9a66-91d415e927df",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "ded294ce-839e-4592-a045-0a00be60d882",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "15f90b75-5e92-4f7f-a7fa-218414384cf7",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "884450c5-2c98-49f5-b876-4b8362d0c575",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "7e9e8e26-27a2-4c5f-b5b2-ae5dc0da481b",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "19e9663d-1b3a-43b5-9d61-ce3a63ed5cb0",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "d32f60f2-fef3-4655-bb3b-21b9ab812319",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "56a38cbf-baf5-4b07-9bda-7059e9016a1d",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "02271c00-8716-4bdd-a4e7-60e471475698",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "c4603700-bf24-4984-a3cb-a4441838d142",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          },
          {
            "id": "a88831e8-33ed-48a5-b94d-e6df1fe55697",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "a59a55ab-81d1-44f1-8846-6948118e216e",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "07071545-48f5-4377-9628-38b372d20374",
            "attributes": {}
          },
          {
            "id": "8b5033c2-2c45-45c2-b987-412bcd48432e",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "07071545-48f5-4377-9628-38b372d20374",
            "attributes": {}
          },
          {
            "id": "99476ba5-16f3-4f9c-afac-3454f0e62879",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "07071545-48f5-4377-9628-38b372d20374",
            "attributes": {}
          },
          {
            "id": "fbdfbde6-993f-44d0-8ea1-8799506a3e35",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "07071545-48f5-4377-9628-38b372d20374",
            "attributes": {}
          },
          {
            "id": "5be54c81-8476-47b2-9a59-b797fcc05a8f",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "07071545-48f5-4377-9628-38b372d20374",
            "attributes": {}
          },
          {
            "id": "da217636-d1d8-4695-b1e3-54c451357211",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "07071545-48f5-4377-9628-38b372d20374",
            "attributes": {}
          },
          {
            "id": "3f88d649-e0ed-431f-ae00-7805148422b6",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "07071545-48f5-4377-9628-38b372d20374",
            "attributes": {}
          },
          {
            "id": "cb15575e-adc6-4992-abc3-9c415ffab927",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "07071545-48f5-4377-9628-38b372d20374",
            "attributes": {}
          }
        ],
        "bookstore-realm": [
          {
            "id": "90606b70-0416-4474-805b-79f34ba8199b",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "352080bc-aca6-456b-ac97-d071adb71125",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "bookstore-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "8e74cfc0-dec1-4067-833a-fdaa2a6335f4",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "acf2d3bf-e8de-4e1f-991a-cb53480c0a9c",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "c60ff035-7b47-46e1-8c7e-f82d1b55228d",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "a53f5845-3652-4a1f-8048-346df356bd76",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "826c50dd-148b-497f-8e75-5a2e70c8d2ff",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "9e0d2a75-5d57-4a6b-9dbf-13b6a9056351",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "2e138041-096b-4b4e-a5c8-8ea1521718f2",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "bookstore-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "1c294f90-711f-46d7-b8f2-66eb42b859fe",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "e90e186e-e8de-40ed-addc-921b6286f50e",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "f4a57379-d0a3-46d1-b5e8-eb73dea6effd",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "bf5bfa84-134f-4002-b3d2-5b984a0f44e1",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "46a8c55c-8b6b-43b8-be23-9fe05303339b",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "a0e3bf12-c80e-457d-96bb-4dc381318850",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "3e77b1fb-c15b-4caa-80fd-9b10481a6021",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "f2d5e300-1fe2-42e3-8205-71ea1d9351cb",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          },
          {
            "id": "9b37d547-22bb-47a2-a3e1-b62361289561",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "1001708e-9627-4895-9218-50c861901c61",
      "name": "default-roles-master",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "368b29a8-75ea-4729-9579-1a39144e3d6d"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "Yes",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "required",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "id": "9ac67cea-0b0e-464c-a819-14e1d1fd4d98",
        "username": "admin",
        "emailVerified": false,
        "attributes": {
          "is_temporary_admin": [
            "true"
          ]
        },
        "enabled": true,
        "createdTimestamp": 1759426923740,
        "totp": false,
        "credentials": [
          {
            "id": "15bed6d9-2bcd-4d45-aed9-9a2d3109e47d",
            "type": "password",
            "createdDate": 1759426923840,
            "secretData": "{\"value\":\"vIjnm+9eG5eate20lfYCOjuUr21jx5AUrdHl/JevMXg=\",\"salt\":\"SZ/W4ORy12E8JIbEfxFhpw==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "admin",
          "default-roles-master"
        ],
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "07071545-48f5-4377-9628-38b372d20374",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "29645a45-29b9-40f5-bd90-faaaa38212bc",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "023aa30a-bee1-4d36-a29d-7edfeb12b344",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "3f5ab0ed-46da-4a62-be49-d7875ec7335d",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "828d09b5-36a1-4e5d-b241-52a7eda132bc",
        "clientId": "bookstore-realm",
        "name": "bookstore Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      },
      {
        "id": "fe2cd49a-5295-46ad-8df1-40b72ce8f981",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "8ab87ea2-a09f-48e5-b802-38530ebd48c9",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "58637a8d-cb28-4406-b49b-e6e72dd542f1",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/master/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "e2ca9cad-a599-42a2-9715-c4ce15d1e97b",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "71c574fd-b132-4591-b376-7661bfb17e2f",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "7fd73920-c1d1-45ad-861f-ec4ed97ad308",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5452a040-4108-4448-aa70-bec72586816f",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "c623af3b-8217-47bc-8647-3f0d931ce299",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "9f9fe166-a0e1-47c3-9127-88843a3133b9",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "6e19a38f-be57-44c0-9007-d4d9975e8078",
        "name": "organization",
        "description": "Additional claims about the organization a subject belongs to",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${organizationScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "c56e95f0-8ddb-49d9-ab00-554916c5dbdd",
            "name": "organization",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-organization-membership-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "organization",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "28d4135f-85fa-4a5a-9d34-1bdf201e548e",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "6bf33003-c3ff-452a-9216-2a017efa6260",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "3a72ac0b-54ca-4b9b-bf50-95524b1eb075",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "59f89785-6cda-4b1e-99da-7317ae243f43",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a5b98a69-950e-470e-9095-0713e65275f9",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b1d66d33-44ce-4a25-84c0-036af6126983",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "165edd71-fb14-4cea-9a05-dec1af61ed86",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "c68367c5-f8b2-44a2-9bbb-cdbdfee35855",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "124ca2d3-bffe-4759-a0f0-c237f1a565ce",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "552dbb3a-c30d-42fc-88a8-994afa9b85c6",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6173f17d-2261-4ce0-b0ca-d20dfdb3d2b9",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "aa9599a8-d397-475f-bced-f236ad7e3f60",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "dd3e578f-cc8b-437e-b0b7-0d14125408c6",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f34226ce-6253-4f56-b9f0-04607bf4b5aa",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "053f7234-53ac-4666-ac32-ab6f3fb6ddb7",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "dbeac826-2a5a-434f-ac8c-cc03528aad2c",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "31cc08ae-dc31-4a3d-8b09-fa2bdda45e61",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "bb7c78d1-7662-4b37-af7e-0e8da17ad9fd",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "f24572d8-6cd2-48e8-93dd-e62ad24760c7",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "47f8ac5a-885a-4859-958c-39c8bd1f7501",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "11118ed6-b90d-451a-b447-7b22c2444661",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "4d229023-34e0-4399-a09e-5bc9a3c9b36f",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          },
          {
            "id": "c89b4823-1e5b-4613-9ee0-c0a00d81552b",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "5d3fb3cb-3e5a-4b44-8b0e-e7c0551cc9b8",
        "name": "service_account",
        "description": "Specific scope for a client enabled for service accounts",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "a7975341-5252-4c86-a614-7d5b59e313e1",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5ab5124b-9772-41db-a662-4180329007bc",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2b1415e4-83ee-4989-a263-16f35b5bb67b",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "0df8a3c7-5672-4aa9-a1c1-aec60c8b5e55",
        "name": "saml_organization",
        "description": "Organization Membership",
        "protocol": "saml",
        "attributes": {
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "4bb892da-ec7e-4ed6-ae46-e38ef23f2875",
            "name": "organization",
            "protocol": "saml",
            "protocolMapper": "saml-organization-membership-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "d80ddbdc-1271-42a9-9e59-60ffad4d5c61",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "55ec8660-9564-4e59-bfd2-108737677a5e",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "fe09ad60-f59b-4744-9b49-518f6f1fe02a",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "6a94ebef-e442-4d0a-acef-79bea320632f",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "653b6c13-2551-4d72-a9f0-87ea16393689",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "5d995f71-dc12-4f8f-85d3-48aab0896e99",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "01702e9f-94a3-4939-9393-2ecae831581d",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "2318c943-1ffd-4b40-83fb-5fbd1727113c",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "ba714aa9-976a-4406-8dba-d04678e80571",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "4eaa0e21-3f2e-44da-8285-9628b826fa4f",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "7a2163d7-6796-4d0a-84e0-afa2b546f17c",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "5c4fbdf7-4111-4f14-b204-e1f64d57bf85",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "saml_organization",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt",
      "organization"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "ac03a70b-b6f2-407b-be78-2b5cfc8be841",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "0a3d212f-a93e-4459-b6cd-14bd2c8cf29f",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "4e860f4a-b46a-4ab6-8d5c-dd5654d6429c",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "31460e3c-64db-440e-9a57-6f62093c2663",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "cc805192-19bc-4320-b8a4-b33bb1457d33",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-attribute-mapper",
              "oidc-address-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "saml-user-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper"
            ]
          }
        },
        {
          "id": "3a341105-03ca-45e1-9234-32f60f2b895c",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "0d10c4c5-71c7-4628-a201-0d637f913a50",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "19aa313a-0203-4244-a69b-5ace22fd93f4",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "saml-role-list-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "f2b0b452-fa71-4ab1-b615-9f6cbd817535",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {
            "kc.user.profile.config": [
              "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "95b2a7db-11a9-497b-9f88-41e41c64b420",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEogIBAAKCAQEA0B6AEkgxVJWsIg3U72KboZD7/w+MacZL80pyMXIcfGPbIyAjhkgblVuTdtuerkTRksy6BY01h6KrAU66EGdAGtQwyaKM0uXNGD9JShTVkU3t33hR7RCpzPf0spTZBwprs/zRLavS9D/Tofs88KQzjt5dZ8UsLb2c6F07lFvEQhsHVw74bUxxss/YhYP72HVgDr6aANU3DuLdRwMH3b+WcCy76pTtPRKCewpHiBKnZ6xE39mBGkA0qExJaeufMRUMJxgCOgVwMfx+oL8J/kf8K+nfA6R66pF7vbCzlAejXaq2PM1YL6w3yAU3Ltv21YPT8Tg2UjFW6b0k+jhbU2FeVwIDAQABAoIBABKCs/dsTl7slQvOWSMVjSwYniE4e8+ooHa6J1/4e0ohA4ujPyWhYjqtk3cd34Y2fsFkziLSRXGT6UvLeccdt9jrCI/WklnrsIs4jcc2BSzQVpjqtba1JbUiVLRRguAacCvpD53VS4UH7EXa97ebky5g3sPtCJnk5IDSUgtHAjSy05JZ5SEn2wHquv5rqI85Nybx2AOtmBKuZHF6k5hqkZ//SDLTM2wJWn5NzsvkNL/73jfaRgiDNOHauhzHTQbvlA3c7TedF39YiH0Vhboy7xeiBpaTqLzlIZC8PaLHjy5PEIU+m3WreFKBvVKyEGePgKy7iCyuGWL9tHJMW4DKcQkCgYEA932bjcmegD0mJhA/krFJfVP+8kx8Qsi5fIcJcWC+BJvr+umFt02RQi+fsYxSaiqnUvRB4oocKQWbTEsIdwXtu4rojz4ylCecQXcTi70Joj0yyZuRp8dQuykSg/iVhWIv2RGngLYsg59B8xn+tkeOGv7n8A2CJHm0q+8am1FMw0sCgYEA10ZZC2DWHw6N21bkGUVPLfRepCsIMwVzEUNr8qxXx49v3qTx80HRVb3l8rVOSXB253rgTysHvqTcSy9tKCh97BsFuSQ3CEp+0Dfa46yuxPsB0qsJw4W5PnTUXWnD+45gQcWaXrsdrakLpp16KwHSDOh3f2WRMqc8A4SPHKtYHaUCgYAncp/us6pN6nFAM+rOKO/7x/2lBUfxJSlbjfKVXcQr2+Z7MemcVALJN+oOVL12KqJM+J3fy/+9EiW0vWj1/73q3LNA0bsiHkYrsR0ucs0sTPDhbaiDw6M8kclfu6mpfwL9aHD4dREXUbUjWIte5nziFKtHef+6bKO9m/jztLu1jQKBgFRjrGZseKPGFdAFGPfbFrYCFNOwVs+BdGExF/ESpHqDfSw/ZuWgSIqfHbRuZJkfcE0/+wyt5qRShlUm61iRvwM+eJjiXHxwj5PaQYF84Sow578I85PlKQAV1mYkHwLPBmbiKqi2G2VHXlzbYNfZJ9mNi8KyMyAzNLCAV4W6mZlNAoGACkY4HRTmtHAcDdIGBBg13UFxAfVDlfs9kZ7pPI8h7wQiFN47GbKE3sCQEk93Mh4RjGraKI3LpTum/yvi+FcpILwapfidEyltMb2PYz4DKgT9LNMu+nU5TS4riJf8VNPbEG8STYQ2yTSc6wSn25zFCptOLNJyrR6URw6h3vlUeWU="
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGZpgRMLDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUxMDAyMTc0MDIzWhcNMzUxMDAyMTc0MjAzWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDQHoASSDFUlawiDdTvYpuhkPv/D4xpxkvzSnIxchx8Y9sjICOGSBuVW5N2256uRNGSzLoFjTWHoqsBTroQZ0Aa1DDJoozS5c0YP0lKFNWRTe3feFHtEKnM9/SylNkHCmuz/NEtq9L0P9Oh+zzwpDOO3l1nxSwtvZzoXTuUW8RCGwdXDvhtTHGyz9iFg/vYdWAOvpoA1TcO4t1HAwfdv5ZwLLvqlO09EoJ7CkeIEqdnrETf2YEaQDSoTElp658xFQwnGAI6BXAx/H6gvwn+R/wr6d8DpHrqkXu9sLOUB6NdqrY8zVgvrDfIBTcu2/bVg9PxODZSMVbpvST6OFtTYV5XAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAKxAYw9U8A/ISMhwYk7M2gcl9C1z7caizddIX83lHqANoWAUSpF9v5p09/GQLAG8HLqe5IV2K6T5N1V+HGPsaL8edxrUCZGCCl1n+8KcnQdOJIDJL9VxmPz8XzCsZxJpCnxH5DovUtXwIulbRhoRYyGdyyaonQHc1Qo9jfS7yRS357oslv6VoQcrqt2qSnAH0o2R6U1jjZ2cBfejmpFYQydfIKHWpsNMftbMHQ1LM0OXH/wiSH8r2bsmFy6odguaVmFrQeIl8c9lAisTQs/5dwS4BZgWm5On7AOp2ern1/kenVtKyPNBjYvoD/7eWD13MuiUQXEB6liZ5gcBjl68bOE="
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "36e2cc62-de87-4cf6-82cf-427755e6aad4",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "3486194f-19cc-4c7f-a775-af1ec023c331"
            ],
            "secret": [
              "3eHsWSVpriNC2qZxfRFo6g"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "b1bbf91b-9b06-4c82-94a0-c00c3fc19a47",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "12eff260-e321-4bf5-b775-9b20aae6fd2f"
            ],
            "secret": [
              "5xF8hPsfgOCl1cx57F9ARF9XBVbsm6CjtEOtYrh7KEeWGXJzsldfB4wxc4hnMGScBuljhe39iWVJOQOl2P0q_x1ZcMyI7E8czBWPpAnaRBlqU3Rip15UMPXS1-ygBGTsLka1v8vxCapVfrmhqodjacfIn7P9ovMxm6fcYR1b_yI"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "88522e88-b54c-43be-b75f-28405be040f0",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEApYygGNefbIH6IEGYPpKHOuw/s/gMIETJmXgdQdjvqGZWYAg6TN53f20LRaRRBN6gylS5HlYCtJF+L5NwSZauF14/olQIwJeXXYZZLSA2mAxShhYbPC1KHZIRJ9Ouj0zZK45LGkYiZIv4PtlE0jr3yr13YWVshagsjHNzdAmpVslxdKD+ZF08xnYuM1NujnHW41umiKpcroAqJeCWqvdfTkLDHSeriBARZ9eSUlD9QnCnxBUNMgANXoZy34VQDiuBjECiCICAMcCeHxfaqDWrxk6yuIY50p/NUA2rlkiC8cpFRQTLx9QuOrAtp+qzjWrGNPWmydSwloW1SzgnhJ9v3wIDAQABAoIBAAuuS/Tkxe7B5F8BRyznFDFFTnYJgvrbOlRLTtkrZYw+yEpsr4cRTWI0KfmcefZQ1QyMWibN+nvje4FU3bU7iLDFFCgFK5GXQKAMj4npE3ZlVtn3gQLHzp/JLiUJa8WDA8cYelZyFhF9H3jOcMDaq0rmqnU4qFBtSNNnfqvJ1g/K+AkRtYVJPlDKmyu/3DPOkVDI9aAXw/U292FEPBayjd8Pomphde4y0MQbb0DwQDvkkB4vrD4Yy0T+e5ObXGcMDmJNwWNbyIEYvDIArT6F52zYbpvwnblBAplK77PL/SWwQFbpPlPk4cNiJVfijvmt2BZmbR+he4PJnXDjKmxHLz0CgYEA5A4pIch9OyJvvogqk71GLoukv3j5jl0QQzoYaEkGxIJTHmG2+zNdZ1Zh6Z1lQjJ8c2wLR6WMLDrVVrzphBep8cJ8i47mDQ6i7CegJKJm6iRg9L/XOvOjN3iGa5BmjF+Tp0SqC4Z35nICD70t/amcerwn0/30kfwmG2XqbL0dTMMCgYEAudW4wjq/Vmy22zwCwnVD1/09I+tAH9a5RN2TT1XmbHGO9MsFo8FI5gKmCLgyNJKNpaLjmEHjXbkuXsaqhbboTo/Sl1AedQtoeOBAKSUNCBDmLbT21hhrmicNjDcGEjIjrpwqEz5Zof+7mBHrgf5x056bFV1/YHV1bbVA2aMcjrUCgYEArH1tbOj4l16PiFvzYDU7vP7QCCaXEq+fGkn5pf7+CGnONl+QB+Ws0vlKK2lp6izHZoGk8nbrU5TYQbe3I7rGRl5k1yWpKN0WK2o5PRw8nQIQ922WfDdFDzKw8PCSL8AmrNBJkVgOnhVDK+ZZv8+m1Eo2Eai2cCh4JibqrX5IiAMCgYBdiXissts6ChBj+ym8bT/PyJRsru2g2Ph59DlAdpE7xlDZYBMfoJsrwuuFegkzMwz+8SUzrv5dX2c6py6PjUgSuwuZw+cArNRR+zXwP8j2ZWMmYG7ZxoLqnXuRNuTkZb5WFh6Lfxeolcr7uRFcZhEvHicbMut5RsXriY7xvMsT/QKBgBMh0l37wgpmsStmO/IguEVegMwNUxv/9sOIGh3a5hlj4WDRLv/XrPysXDzX5umL2xQ/13/uWlPPlZKermFfX17InN6zbmH0siGauUle3IlOBDstWtP3uLPYBCSoUQS1xsbQfBChNzjrS42O/1LIYUcl0FePb2EBJAnLP+g6l3K4"
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGZpgRMkzANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUxMDAyMTc0MDIzWhcNMzUxMDAyMTc0MjAzWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCljKAY159sgfogQZg+koc67D+z+AwgRMmZeB1B2O+oZlZgCDpM3nd/bQtFpFEE3qDKVLkeVgK0kX4vk3BJlq4XXj+iVAjAl5ddhlktIDaYDFKGFhs8LUodkhEn066PTNkrjksaRiJki/g+2UTSOvfKvXdhZWyFqCyMc3N0CalWyXF0oP5kXTzGdi4zU26OcdbjW6aIqlyugCol4Jaq919OQsMdJ6uIEBFn15JSUP1CcKfEFQ0yAA1ehnLfhVAOK4GMQKIIgIAxwJ4fF9qoNavGTrK4hjnSn81QDauWSILxykVFBMvH1C46sC2n6rONasY09abJ1LCWhbVLOCeEn2/fAgMBAAEwDQYJKoZIhvcNAQELBQADggEBADqy/SnzkuC6tdQTabOHGklyJCz4vcyLw5sA7K/mR1m5t7ZN4wonjhyXIcPqKuFH9/JWB6hlO/wSW1ZgdAXyRhg0SMt3im2XmniIErautzm9sEiiqgULYKIHVgHWY+eNbT27K3oJJPsthDjEgqNi82f7QlHo59Asg1F/J/FwU+AJ9LWGB92J5yIOza5wE+d2V6zysFC7ouWJ56GowwO9VQoTJR86A5Wv1100vBlc0ImOUZkr7Z2l8tpc/pPHNWC2cAHbcgOAcVAono36EPwvdTh4uW9/rT17q5rkgOtCuoEuga0pUkbkkXYMoniW7VwEog/P59KzLQC50hK+xDh9Mng="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "authenticationFlows": [
      {
        "id": "175828ba-9cdf-416c-83f5-8139411f5d68",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "26af669d-54d2-4a3d-a4ad-a678ca2a6c00",
        "alias": "Browser - Conditional 2FA",
        "description": "Flow to determine if any 2FA is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorConfig": "browser-conditional-credential",
            "authenticator": "conditional-credential",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "webauthn-authenticator",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-recovery-authn-code-form",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "4c49671d-89aa-4f25-b56d-5bbf272ce205",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ae35b060-e097-4031-b83c-35c0e574b631",
        "alias": "First broker login - Conditional 2FA",
        "description": "Flow to determine if any 2FA is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorConfig": "first-broker-login-conditional-credential",
            "authenticator": "conditional-credential",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "webauthn-authenticator",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-recovery-authn-code-form",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "096a6181-356d-4732-b620-65a29ccab551",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "79579f93-a367-42f5-804a-1fe8373d9d4c",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "36bc7635-9448-41dd-a767-009c2578c7db",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9fb54f53-01f3-4488-86b7-87e7f7d224e9",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional 2FA",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "fec57d55-7730-4ace-8c04-6d6f64a99282",
        "alias": "browser",
        "description": "Browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f83e7311-8918-4d70-bd6b-b78473eb859f",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "052f4fd0-5655-497a-83a0-4ad1ec0816b5",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5c62015e-25f9-48b7-a05a-90f137919da8",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0e1d7a2b-2b4a-4547-a85e-171753a5ef20",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "13484242-4d33-4113-8a95-ffe4dec069d7",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional 2FA",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "cb739073-37cf-410f-9c10-ec6355b178a1",
        "alias": "registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d4b3cec6-5d28-4141-8ae5-96af78c785d7",
        "alias": "registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f20fdb1b-e7b4-40b6-866b-f5bb38d9e748",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b23ef23e-3a67-4b4c-8833-b0a0891a005f",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "877a678e-7966-4bf6-89d5-95aa5c810840",
        "alias": "browser-conditional-credential",
        "config": {
          "credentials": "webauthn-passwordless"
        }
      },
      {
        "id": "36539150-c5f1-44d8-bd8f-564602870ded",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "341652ed-59b8-40cd-a8b1-6f8d7a19cd81",
        "alias": "first-broker-login-conditional-credential",
        "config": {
          "credentials": "webauthn-passwordless"
        }
      },
      {
        "id": "031ed987-8d3a-4ed4-bc8f-55d39ca73198",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "UPDATE_EMAIL",
        "name": "Update Email",
        "providerId": "UPDATE_EMAIL",
        "enabled": false,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 110,
        "config": {}
      },
      {
        "alias": "idp_link",
        "name": "Linking Identity Provider",
        "providerId": "idp_link",
        "enabled": true,
        "defaultAction": false,
        "priority": 120,
        "config": {}
      },
      {
        "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
        "name": "Recovery Authentication Codes",
        "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES",
        "enabled": true,
        "defaultAction": false,
        "priority": 130,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "26.4.0",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }